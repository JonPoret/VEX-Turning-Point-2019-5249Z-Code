/*
 *PID Gyroscope Code (Draft #1)
 *@author Karthik Selvaraj
 *November 15, 2018
 *Changes- This is the first draft
*/
void GyroTurn(double deg){
    deg *= 10.0;
    
    double gyroVal = fabs(Gyroscope.value(vex::analogUnits::range12bit));
    double org = gyroVal;
    double current = gyroVal - org;

    double goal = deg + org;
    
    double pGain = 0.6*(0.3713636364);
    double iGain = 0.5*(0.3713636364);
    double dGain = 0.125*(0.3713636364);
    
    double error = goal - current;
    double errorSum = 0.0;
    double oldError = 0.0;
    
    while(error > 0.0){ //if the bot/gyroscope is not on target, this code exxecutes, and attempts to correct the bot.
        gyroVal = fabs(Gyroscope.value(vex::analogUnits::range12bit));
        current = gyroVal - org;
        error = goal - current;
        errorSum += (error);
        if(error == 0.0){
            errorSum = 0.0;
        }
       
        double change = error - oldError; 
        
        double motorSpeed = (error*pGain) + ((1.0/errorSum)*(iGain)) + (change*dGain);
        if(motorSpeed <= 30.0){
            motorSpeed = 30.0;
        } //this code determines how fast the bot should go in order for the bot to correct itself
        RightChassis.spin(vex::directionType::rev, motorSpeed, vex::velocityUnits::rpm);
        LeftChassis.spin(vex::directionType::fwd, motorSpeed,vex::velocityUnits::rpm);
        
        oldError = error;
        
        vex::task::sleep(30);
    }
    
    LeftChassis.stop(vex::brakeType::brake);
    RightChassis.stop(vex::brakeType::brake);
}
